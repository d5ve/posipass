/*
PosiPass - Random positive passphrases

Synopsis

    # Generate ten default three-word passphrases.
    # In firstSECONDth1rd format.
    posipass

    # Generate fifty stronger five-word passphrases.
    posipass --words 5 --gen 50

Description

    PosiPass generates multi-word passphrases containing words which have positive
    meanings or connotations.

    The template is for three or more words to be concatenated together. The first
    word is all lowercase, the second word is ALL UPPERCASE, and the third word
    uses the standard 'replace vowels with numbers' leetspeek transform. Any
    further words continue the pattern starting at step 1 again.

    Wordlist from https://www.cs.uic.edu/~liub/FBS/sentiment-analysis.html

    I use these passwords for signing up on various websites, and want to balance
    the ease of remembering these passwords against their worst-case crackability.

    Three-word passwords generally have lengths of 12 characters or more, and won't
    fall to the simplest dictionary attacks.

    This is security through obscurity, however, as if an attacker knows the
    template and the wordlists, then they can easily craft a password cracker to
    suit.

    Don't use passphrases generated by the default settings for anything important,
    as there just isn't enough entropy to be safe.
*/
package main

import (
	"flag"
	"fmt"
	"os"
)

var help = flag.Bool("help", false, "Print help docs")
var words = flag.Int("words", 3, "Number of words in each passphrase")
var gen = flag.Int("gen", 10, "Number of passphrases to generate")

func main() {
	flag.Parse()

	if *help {
		fmt.Fprintf(os.Stderr, "Usage of %s:\n", os.Args[0])
		flag.PrintDefaults()
		os.Exit(0)
	}

}
